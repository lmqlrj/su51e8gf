hotfix log



2011.1.8    local_bus: bugfix #900101: probabilistic appearance that write data failed.

                       <--- skew between x and y -->
                    ________________________
                   |                        |
                   |    __________          |       _____________
                   |   |          | we_dly  -------|             |
     we  __________|___|x         |________________|y            |  we rises asynchronizely,
                       |  delay   |                |  write_block|  write when we_y=1 and we_dly=0,
     clk ______________|          |         _______|             |  but the state combination dosen't accur
                   |   |__________|        |       |_____________|  as we rises just before clk at x but after at y.
                   |_______________________|

                     ______________________________                              ______________________________
                    |                              |                            |                              |
                    |                              |                            |                              |
                    |                              |                            |                              |
clk_________________|                              |____________________________|                              |

                     __________________________________________________________________________________________
                    |                              
    just before clk->                             
                    |                            
we x________________|                           

                       _______________________________________________________________________________________
                      |                              
                   -> |<-delay by block switch time 
                      |                            
we_dly  ______________|                           

                      ________________________________________________________________________________________
                     |                           
                     |<-delay by skew y-x       
                     |                         
we y_________________|                        

fix: keep the asynchronized input signals within combination block only, don not use them in the conditional expression in sequencial block.
instead, synchronize them by clk shifting, and take the trimmed version.
in this case, trim we input by 2 cascading clock-cycle-delay, get we_dly0 and we_dly1, synchronized by clk capturing the rising edge of we.
by the way, only clk and rst relavant signal can be in the always sense list.

2010.12.18  local_bus: bugfix #900100: during local bus writing to a single bit of TXDIS register, other bit(s) may be affected too.

this issue caused by the timing violation of the dataflow from upstream logic device, when the incoming data is sampled at LOW state of WE signal line.

                    <------------- write data valid -------------->
cs ---                                                                          ------
      |                                                                        |
      |________________________________________________________________________|
we -----------------                                               -------------------
                    |                                             |
                    |_____________________________________________|<------------ data should be sampled at this rising edge.
data  ___________________________     ____________________________________
     /                           \___/                                    \___________
     \___________________________/   \____________________________________/
                                   ^
                                   |____ data changes during write data valid time

as shown above, during write data valid time, data line should be at determined state, constantly, until we driven HIGH.
due to writing timing violation, the changing data is writen to the register, e.g TXDIS, which is directly output to TX_DISABLE pin of sfp, causing the sfp restart.

fix to this issue is sampling the data lines at the rising edge of we at the end of writing operation.



2010.7.14   iic: bugfix #900200: the corresponding I2C scl is driven low when selected.

in the original version of iic.v, scl outputs HIG_Z or LOW.

assign	scl=(iic_scl_out==LOW) ? LOW : 1'bz;

but when instanciated in the top module, regs_ctl.v, i2c outputs scl through a buffer to i/o pin of cpld:

assign	scl0 = (iic_sel == 8'h01)?scl:1'bz;

atfter synthesis, above code looks like:

                    iic_sel
                       0
                       |
                       |
                     |\|
                     | \
     scl_____________|  \_______scl0
                     |  /
                     | /
                     |/

as I thought, when iic_sel is 8'h01, scl0 should be scl, but it's not. why?
because when iic_sel is on, scl0 is whatever scl is. but when scl is 1'bz.
in internal circuits of cpld ,not at the i/o pins, 1'bz means LOW OR HIGH. 1'bz is what it realy means only at the i/o pin of the device.
for example, if scl is an output port, or it's assigned to an output port, the output port will be HIGH_Z when scl=1'bz.
otherwise, as shown above, scl connect to a buffer internally, scl=1'bz means the state of scl is unexpected, it is either 1 or 0, just like scl=1'bx.
obviously scl was driven LOW internally when scl=1'bz, as the symptom shown.

correction is easy. since the original version of iic.v is supposed to used as a independent module, which direct its module port to i/o pin of the device.
HIGH_Z at the scl pin usually driven HIGH by an externally connected pull-up resistor, just like driving the scl pin HIGH internally.
change the HIGH_Z state to HIGH at the scl wire, i.e 1'bz to 1'b1, to fix this issue.
